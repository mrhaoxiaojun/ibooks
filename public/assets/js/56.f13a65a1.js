(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{568:function(s,t,n){"use strict";n.r(t);var e=n(20),a=Object(e.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("如何在 GitHub Pages 上部署项目 下面以 vue-cli 项目为例")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",[s._v("以下为四种，手动部署方式，均需要手动触发发布命令，而推荐使用第三种或第四种方式，更为方便")]),s._v(" "),n("p",[s._v("现在都是需要自己搞两个分支，然后手动发布，那么我们想直接push代码的时候就自动 持续集成/持续部署(CI/CD) 后面我们会继续分析")])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",[n("strong",[s._v("需要注意的坑（改成相对路径才可以直接访问生成的静态文件）")])]),s._v(" "),n("p",[s._v("1、修改config => index.js => build => assetsPublicPath 中的'/'成为'./'")]),s._v(" "),n("p",[s._v("2、在build => util.js 里找到ExtractTextPlugin.extract增加一行：publicPath: '../../'")])]),s._v(" "),n("p",[n("strong",[s._v("所有部署方法的第一步：")])]),s._v(" "),n("p",[s._v("先将本地工程push到远程master分支")]),s._v(" "),n("h2",{attrs:{id:"方法一（subtree方式）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法一（subtree方式）"}},[s._v("#")]),s._v(" 方法一（subtree方式）")]),s._v(" "),n("p",[s._v("如果你的确想用 gh-pages（或别的什么目录名）的话，以下是一种最简单的方法：将 dist 下的所有文件夹 push 到 gh-pages")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("  $ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n  $ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b gh-pages\n  $ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -f dist\n  $ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'create project'")]),s._v("\n  $ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree push --prefix dist origin gh-pages\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("code",[s._v("dist")]),s._v(" 代表子树所在的目录名\n"),n("code",[s._v("origin")]),s._v(" 是 remote name\n"),n("code",[s._v("gh-pages")]),s._v(" 是目标分支名称")]),s._v(" "),n("h2",{attrs:{id:"方法二（将目标文件作为仓库）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法二（将目标文件作为仓库）"}},[s._v("#")]),s._v(" 方法二（将目标文件作为仓库）")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" dist // 进入dist目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init // "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" 初始化\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b gh-pages // 创建gh-pages分支\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"init project"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://github.com//xxx.xx.git // 设置远程仓库地址\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin gh-pages // 推送到目标分支gh-pages\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"方法三（通过第三方包的方式）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法三（通过第三方包的方式）"}},[s._v("#")]),s._v(" 方法三（通过第三方包的方式）")]),s._v(" "),n("p",[s._v("1、npm 安装gh-pages "),n("code",[s._v("npm install gh-pages --save-dev")])]),s._v(" "),n("p",[s._v("2、修改package.json")]),s._v(" "),n("p",[s._v('​\t添加homepage："https//github账户名/github.io/项目名称"')]),s._v(" "),n("p",[s._v("​\tscripts 里添加两个命令")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"predeploy"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run build"')]),s._v(",\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deploy"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gh-pages -d build"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("添加好之后执行上面两个命令，这样就坐等执行完成，然后再到你的仓库里面的设置看看，是不是发现gh-pages已经发布成功并设置成了github pages")]),s._v(" "),n("p",[s._v("3、运行"),n("code",[s._v("npm run deploy")]),s._v(" 自动打包并上次到gh-pages分支")]),s._v(" "),n("p",[s._v("4、访问"),n("code",[s._v("https//github账户名/github.io/项目名称")]),s._v(" 部署成功")]),s._v(" "),n("p",[n("strong",[s._v("注意：")])]),s._v(" "),n("blockquote",[n("p",[s._v("package.json里面homepages影响项目发布后的js的相对路径，因为它编译的时候会改变js和css路径，比如：如果你添加了homepages，那么你发布的js路径就变成了/your-repository/../../xx.js了，否则就会变成/../../xx.js")])]),s._v(" "),n("h2",{attrs:{id:"方法四（编写shell脚本的方式）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法四（编写shell脚本的方式）"}},[s._v("#")]),s._v(" 方法四（编写shell脚本的方式）")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("在 "),n("code",[s._v("docs/.vuepress/config.js")]),s._v(" 中设置正确的 "),n("code",[s._v("base")]),s._v("。")]),s._v(" "),n("p",[s._v("如果你打算发布到 "),n("code",[s._v("https://.github.io/")]),s._v("，则可以省略这一步，因为 "),n("code",[s._v("base")]),s._v(" 默认即是 "),n("code",[s._v('"/"')]),s._v("。")]),s._v(" "),n("p",[s._v("如果你打算发布到 "),n("code",[s._v("https://.github.io//")]),s._v("（也就是说你的仓库在 "),n("code",[s._v("https://github.com//")]),s._v("），则将 "),n("code",[s._v("base")]),s._v(" 设置为 "),n("code",[s._v('"//"')]),s._v("。")])]),s._v(" "),n("li",[n("p",[s._v("在你的项目中，创建一个如下的 "),n("code",[s._v("deploy.sh")]),s._v(" 文件（请自行判断去掉高亮行的注释）:")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env sh")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 确保脚本抛出遇到的错误")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成静态文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run docs:build\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入生成的文件夹")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" docs/.vuepress/dist\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果是发布到自定义域名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo 'www.example.com' > CNAME")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deploy'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果发布到 https://<USERNAME>.github.io")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果发布到 https://<USERNAME>.github.io/<REPO>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])])])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",[s._v("你可以在你的持续集成的设置中，设置在每次 push 代码时自动运行上述脚本。")])]),s._v(" "),n("p",[s._v("详情可以看"),n("a",{attrs:{href:"https://www.vuepress.cn/guide/deploy.html#github-pages",target:"_blank",rel:"noopener noreferrer"}},[s._v("vuepress官方说明"),n("OutboundLink")],1),s._v("或vuepress比较不错的主题，"),n("a",{attrs:{href:"https://vuepress-theme-reco.recoluan.com/views/other/deploy.html#github",target:"_blank",rel:"noopener noreferrer"}},[s._v("vuepress-theme-reco的文档介绍"),n("OutboundLink")],1),s._v(" 里面还讲到了手动部署和自动部署")]),s._v(" "),n("ul",[n("li",[s._v("参考："),n("a",{attrs:{href:"https://www.jianshu.com/p/cc053119f119",target:"_blank",rel:"noopener noreferrer"}},[s._v("git subtree push1"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("参考："),n("a",{attrs:{href:"https://segmentfault.com/q/1010000007913675?_ea=1490992",target:"_blank",rel:"noopener noreferrer"}},[s._v("git subtree push2"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("参考："),n("a",{attrs:{href:"https://blog.csdn.net/nqmysbd/article/details/88764425",target:"_blank",rel:"noopener noreferrer"}},[s._v("git init"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("参考："),n("a",{attrs:{href:"https://segmentfault.com/a/1190000010672318",target:"_blank",rel:"noopener noreferrer"}},[s._v("npm gh-pages"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);