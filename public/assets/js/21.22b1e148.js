(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{536:function(t,s,a){"use strict";a.r(s);var n=a(20),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("本文通过个人学习浏览器（基于 Chrome 浏览器）相关原理总结得出")])]),t._v(" "),a("h2",{attrs:{id:"为什么需要学习浏览器工作原理？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要学习浏览器工作原理？"}},[t._v("#")]),t._v(" 为什么需要学习浏览器工作原理？")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("准确评估 Web 开发项目的可行性")])])]),t._v(" "),a("li",[a("ol",[a("li",[t._v("从更高维度审视页面")])])]),t._v(" "),a("li",[a("ol",[a("li",[t._v("在快节奏的技术迭代中把握本质")])])])]),t._v(" "),a("p",[t._v("如果了解了浏览器的工作机制，那么你可以梳理出来前端技术的发展脉络，更加深刻地理解当前的技术，同时你也会清楚其不足之处，以及演化方向。")]),t._v(" "),a("h2",{attrs:{id:"宏观视角下的浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏观视角下的浏览器"}},[t._v("#")]),t._v(" 宏观视角下的浏览器")]),t._v(" "),a("h3",{attrs:{id:"chrome-打开一个页面需要启动多少进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chrome-打开一个页面需要启动多少进程"}},[t._v("#")]),t._v(" Chrome 打开一个页面需要启动多少进程")]),t._v(" "),a("p",[t._v("可以点击 Chrome 浏览器右上角的“选项”菜单， "),a("img",{attrs:{src:"imgs%5C662413313149f66fe0880113cb6ab98a.png",alt:"662413313149f66fe0880113cb6ab98a"}}),t._v("选择“更多工具”子菜单，点击“任务管理器”，这将打开 Chrome 的任务管理器的窗口")]),t._v(" "),a("p",[t._v("最新的 Chrome 浏览器包括：1 个浏览器（Browser）主进程、1 个 GPU 进程、1 个网络（NetWork）进程、多个渲染进程和多个插件进程")]),t._v(" "),a("h3",{attrs:{id:"线程-vs-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程-vs-进程"}},[t._v("#")]),t._v(" 线程 VS 进程")]),t._v(" "),a("p",[t._v("多线程可以并行处理任务，但是线程是不能单独存在的，它是由进程来启动和管理的")]),t._v(" "),a("p",[t._v("那什么又是进程呢？")]),t._v(" "),a("p",[t._v("一个进程就是一个程序的运行实例。详细解释就是，启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫进程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5C3380f0a16c323deda5d3a300804b95da.png",alt:"3380f0a16c323deda5d3a300804b95da"}}),t._v("\n从图中可以看到，线程是依附于进程的，而进程中使用多线程并行处理能提升运算效率。")]),t._v(" "),a("p",[t._v("进程和线程之间的关系有以下 4 个特点")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("进程中的任意一线程执行出错，都会导致整个进程的崩溃。")])])]),t._v(" "),a("li",[a("ol",[a("li",[t._v("线程之间共享进程中的数据。")])])]),t._v(" "),a("li",[a("ol",[a("li",[t._v("当一个进程关闭之后，操作系统会回收进程所占用的内存。")])])]),t._v(" "),a("li",[a("ol",[a("li",[t._v("进程之间的内容相互隔离。")])])])]),t._v(" "),a("h3",{attrs:{id:"进程之间如何通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程之间如何通信"}},[t._v("#")]),t._v(" 进程之间如何通信")]),t._v(" "),a("p",[t._v("进程之间的数据是严格隔离的，如果进程之间需要进行数据的通信，这时候，就需要使用用于进程间通信（IPC）的机制了")]),t._v(" "),a("h3",{attrs:{id:"单进程浏览器时代的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单进程浏览器时代的问题"}},[t._v("#")]),t._v(" 单进程浏览器时代的问题")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5C6ddad2419b049b0eb2a8036f3dfff1ca.png",alt:"6ddad2419b049b0eb2a8036f3dfff1ca"}})]),t._v(" "),a("p",[t._v("单进程浏览器是指浏览器的所有功能模块都是运行在同一个进程里，这些模块包含了网络、插件、JavaScript 运行环境、渲染引擎和页面等")]),t._v(" "),a("p",[t._v("如此多的功能模块运行在一个进程里，是导致单进程浏览器不稳定、不流畅和不安全的一个主要因素。")]),t._v(" "),a("ul",[a("li",[t._v("不稳定：早期浏览器很多功能借助插件实现，web视频，web游戏等，那么插件容易出现问题，一个插件意外奔溃，那么整个页面线程就奔溃了，线程奔溃了就以为这当前进程奔溃，那么只有单进程的浏览器也就奔溃了，那么除了插件，如果浏览器引擎奔溃了，浏览器一样奔溃")]),t._v(" "),a("li",[t._v("不流畅：可以看到单进程中，所有的页面渲染，js执行环境等都在一个线程中，那么就意味着同时只有一个模块在工作，那么可想而它一定慢，如果碰到内存泄漏或者复杂的嵌套循环，直接就卡顿在哪里了，因为线程中的当前任务被占用没有执行完，不能去执行其他任务")]),t._v(" "),a("li",[t._v("不安全：通过插件或者通过浏览器漏洞 可以获取操作系统的权限，这很不安全")])]),t._v(" "),a("h3",{attrs:{id:"多进程浏览器时代如何解决上述问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多进程浏览器时代如何解决上述问题"}},[t._v("#")]),t._v(" 多进程浏览器时代如何解决上述问题")]),t._v(" "),a("ul",[a("li",[t._v("解决不稳定：插件也是单独的进程，进程之间相互隔离，那么即使插件挂了，也不会影响当前浏览器的")]),t._v(" "),a("li",[t._v("解决不流畅：JavaScript也是允许在渲染进程中的，所以即使是阻塞了，也不会影响其他页面和浏览器，对于内存泄漏，当一个页面关闭，对于的渲染进程也将系统回收，内存释放，泄露问题迎刃而解")]),t._v(" "),a("li",[t._v("解决不安全：多进程采用 ** 安全沙箱** 就是操作系统给进程上的一把锁，沙箱里的进程不可以在硬盘上写数据，也不能随意读取任何数据")])]),t._v(" "),a("h3",{attrs:{id:"目前主流浏览器都包含哪些进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目前主流浏览器都包含哪些进程"}},[t._v("#")]),t._v(" 目前主流浏览器都包含哪些进程")]),t._v(" "),a("ul",[a("li",[t._v("浏览器进程。主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。")]),t._v(" "),a("li",[t._v("渲染进程。核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中，默认情况下，Chrome 会为每个 Tab 标签创建一个渲染进程。出于安全考虑，渲染进程都是运行在沙箱模式下。")]),t._v(" "),a("li",[t._v("GPU 进程。其实，Chrome 刚开始发布的时候是没有 GPU 进程的。而 GPU 的使用初衷是为了实现 3D CSS 的效果，只是随后网页、Chrome 的 UI 界面都选择采用 GPU 来绘制，这使得 GPU 成为浏览器普遍的需求。最后，Chrome 在其多进程架构上也引入了 GPU 进程。")]),t._v(" "),a("li",[t._v("网络进程。主要负责页面的网络资源加载，之前是作为一个模块运行在浏览器进程里面的，直至最近才独立出来，成为一个单独的进程。")]),t._v(" "),a("li",[t._v("插件进程。主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。")])]),t._v(" "),a("h3",{attrs:{id:"什么是面向服务的架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是面向服务的架构"}},[t._v("#")]),t._v(" 什么是面向服务的架构")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5C329658fe821252db47b0964037a1de2a.png",alt:"329658fe821252db47b0964037a1de2a"}})]),t._v(" "),a("p",[t._v("Chrome 官方团队使用“面向服务的架构”（Services Oriented Architecture，简称 SOA）的思想设计了新的 Chrome 架构。也就是说 Chrome 整体架构会朝向现代操作系统所采用的“面向服务的架构” 方向发展，原来的各种模块会被重构成独立的服务（Service），每个服务（Service）都可以在独立的进程中运行，访问服务（Service）必须使用定义好的接口，通过 IPC 来通信，从而构建一个更内聚、松耦合、易于维护和扩展的系统")]),t._v(" "),a("p",[t._v("在资源不足的设备上，将服务合并到浏览器进程中")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5Ca9ba86d7b03263fa3997d3733d958176.png",alt:"a9ba86d7b03263fa3997d3733d958176"}})]),t._v(" "),a("h3",{attrs:{id:"偶尔还会碰到一些由于单个页面卡死最终崩溃导致所有页面崩溃的情况，请问这是什么原因呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#偶尔还会碰到一些由于单个页面卡死最终崩溃导致所有页面崩溃的情况，请问这是什么原因呢"}},[t._v("#")]),t._v(" 偶尔还会碰到一些由于单个页面卡死最终崩溃导致所有页面崩溃的情况，请问这是什么原因呢")]),t._v(" "),a("p",[t._v('通常情况下是一个页面使用一个进程，但是，有一种情况，叫"同一站点(same-site)"，具体地讲，我们将“同一站点”定义为根域名（例如，abc.org）加上协议（例如，https:// 或者http://），还包含了该根域名下的所有子域名和不同的端口，比如下面这三个：')]),t._v(" "),a("p",[t._v("https://time.abc.org\nhttps://www.abc.org\nhttps://www.abc.org:8080\n都是属于同一站点，因为它们的协议都是https，而根域名也都是abc.org。你也许了解同源策略，但是同一站点和同源策略还是存在一些不同地方，在这里你需要了解它们不是同一件事就行了。")]),t._v(" "),a("p",[t._v("Chrome的默认策略是，每个标签对应一个渲染进程。但是如果从一个页面打开了新页面，而新页面和当前页面属于同一站点时，那么新页面会复用父页面的渲染进程。官方把这个默认策略叫process-per-site-instance。")]),t._v(" "),a("p",[t._v("所以，这种情况下，一个页面崩溃了，会导致同一站点的页面同时崩溃，因为他们使用了同一个渲染进程。")]),t._v(" "),a("h3",{attrs:{id:"那么如何保证页面文件能被完整地送达浏览器呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#那么如何保证页面文件能被完整地送达浏览器呢"}},[t._v("#")]),t._v(" 那么如何保证页面文件能被完整地送达浏览器呢")]),t._v(" "),a("ul",[a("li",[t._v("互联网中的数据是通过数据包来传输的，数据包在传输过程中容易丢失或出错。")]),t._v(" "),a("li",[t._v("IP 负责把数据包送达目的主机。")]),t._v(" "),a("li",[t._v("UDP 负责把数据包送达具体应用。")]),t._v(" "),a("li",[t._v("而 TCP 保证了数据完整地传输，它的连接可分为三个阶段：建立连接、传输数据和断开连接。")])]),t._v(" "),a("h3",{attrs:{id:"为什么通常在第一次访问一个站点时，打开速度很慢，当再次访问这个站点时，速度就很快了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么通常在第一次访问一个站点时，打开速度很慢，当再次访问这个站点时，速度就很快了"}},[t._v("#")]),t._v(" 为什么通常在第一次访问一个站点时，打开速度很慢，当再次访问这个站点时，速度就很快了")]),t._v(" "),a("p",[t._v("DNS 缓存和页面资源缓存这两块数据是会被浏览器缓存的")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5C5fc2f88a04ee0fc41a808f3481287408.png",alt:"5fc2f88a04ee0fc41a808f3481287408"}})]),t._v(" "),a("p",[t._v("从上图的第一次请求可以看出，当服务器返回 HTTP 响应头给浏览器时，浏览器是通过响应头中的 Cache-Control 字段来设置是否缓存该资源。")]),t._v(" "),a("p",[t._v("简要来说，很多网站第二次访问能够秒开，是因为这些网站把很多资源都缓存在了本地，浏览器缓存直接使用本地副本来回应请求，而不会产生真实的网络请求，从而节省了时间。同时，DNS 数据也被浏览器缓存了，这又省去了 DNS 查询环节。")]),t._v(" "),a("h3",{attrs:{id:"当登录过一个网站之后，下次再访问该站点，就已经处于登录状态了，这是怎么做到的呢？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当登录过一个网站之后，下次再访问该站点，就已经处于登录状态了，这是怎么做到的呢？"}},[t._v("#")]),t._v(" 当登录过一个网站之后，下次再访问该站点，就已经处于登录状态了，这是怎么做到的呢？")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5Cd9d6cefe8d3d6d84a37a626687c6ecb3.png",alt:"d9d6cefe8d3d6d84a37a626687c6ecb3"}})]),t._v(" "),a("p",[t._v("简单地说，如果服务器端发送的响应头内有 Set-Cookie 的字段，那么浏览器就会将该字段的内容保持到本地。当下次客户端再往该服务器发送请求时，客户端会自动在请求头中加入 Cookie 值后再发送出去。服务器端发现客户端发送过来的 Cookie 后，会去检查究竟是从哪一个客户端发来的连接请求，然后对比服务器上的记录，最后得到该用户的状态信息")]),t._v(" "),a("h3",{attrs:{id:"浏览器中的-http-请求从发起到结束一共经历了如下八个阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的-http-请求从发起到结束一共经历了如下八个阶段"}},[t._v("#")]),t._v(" 浏览器中的 HTTP 请求从发起到结束一共经历了如下八个阶段")]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5C1b49976aca2c700883d48d927f48986c.png",alt:"1b49976aca2c700883d48d927f48986c"}})]),t._v(" "),a("h3",{attrs:{id:"从输入url到页面展示，这中间发生了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到页面展示，这中间发生了什么"}},[t._v("#")]),t._v(" 从输入URL到页面展示，这中间发生了什么")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 用户输入URL，浏览器会根据用户输入的信息判断是搜索还是网址，如果是搜索内容，就将搜索内容+默认搜索引擎合成新的URL；如果用户输入的内容符合URL规则，浏览器就会根据URL协议，在这段内容上加上协议合成合法的URL\n2. 用户输入完内容，按下回车键，浏览器导航栏显示loading状态，但是页面还是呈现前一个页面，这是因为新页面的响应数据还没有获得\n3. 浏览器进程浏览器构建请求行信息，会通过进程间通信（IPC）将URL请求发送给网络进程\nGET /index.html HTTP1.1\n4. 网络进程获取到URL，先去本地缓存中查找是否有缓存文件，如果有，拦截请求，直接200返回；否则，进入网络请求过程\n5. 网络进程请求DNS返回域名对应的IP和端口号，如果之前DNS数据缓存服务缓存过当前域名信息，就会直接返回缓存信息；否则，发起请求获取根据域名解析出来的IP和端口号，如果没有端口号，http默认80，https默认443。如果是https请求，还需要建立TLS连接。\n6. Chrome 有个机制，同一个域名同时最多只能建立 6 个TCP 连接，如果在同一个域名下同时有 10 个请求发生，那么其中 4 个请求会进入排队等待状态，直至进行中的请求完成。如果当前请求数量少于6个，会直接建立TCP连接。\n7. TCP三次握手建立连接，http请求加上TCP头部——包括源端口号、目的程序端口号和用于校验数据完整性的序号，向下传输\n8. 网络层在数据包上加上IP头部——包括源IP地址和目的IP地址，继续向下传输到底层\n9. 底层通过物理网络传输给目的服务器主机\n10. 目的服务器主机网络层接收到数据包，解析出IP头部，识别出数据部分，将解开的数据包向上传输到传输层\n11. 目的服务器主机传输层获取到数据包，解析出TCP头部，识别端口，将解开的数据包向上传输到应用层\n12. 应用层HTTP解析请求头和请求体，如果需要重定向，HTTP直接返回HTTP响应数据的状态code301或者302，同时在请求头的Location字段中附上重定向地址，浏览器会根据code和Location进行重定向操作；如果不是重定向，首先服务器会根据 请求头中的If-None-Match 的值来判断请求的资源是否被更新，如果没有更新，就返回304状态码，相当于告诉浏览器之前的缓存还可以使用，就不返回新数据了；否则，返回新数据，200的状态码，并且如果想要浏览器缓存数据的话，就在相应头中加入字段：\nCache-Control:Max-age=2000\n响应数据又顺着应用层——传输层——网络层——网络层——传输层——应用层的顺序返回到网络进程\n13. 数据传输完成，TCP四次挥手断开连接。如果，浏览器或者服务器在HTTP头部加上如下信息，TCP就一直保持连接。保持TCP连接可以省下下次需要建立连接的时间，提示资源加载速度\nConnection:Keep-Alive\n14. 网络进程将获取到的数据包进行解析，根据响应头中的Content-type来判断响应数据的类型，如果是字节流类型，就将该请求交给下载管理器，该导航流程结束，不再进行；如果是text/html类型，就通知浏览器进程获取到文档准备渲染\n15. 浏览器进程获取到通知，根据当前页面B是否是从页面A打开的并且和页面A是否是同一个站点（根域名和协议一样就被认为是同一个站点），如果满足上述条件，就复用之前网页的进程，否则，新创建一个单独的渲染进程\n16. 浏览器会发出“提交文档”的消息给渲染进程，渲染进程收到消息后，会和网络进程建立传输数据的“管道”，文档数据传输完成后，渲染进程会返回“确认提交”的消息给浏览器进程\n17. 浏览器收到“确认提交”的消息后，会更新浏览器的页面状态，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新web页面，此时的web页面是空白页\n18. 渲染进程对文档进行页面解析和子资源加载，HTML 通过HTM 解析器转成DOM Tree（二叉树类似结构的东西），CSS按照CSS 规则和CSS解释器转成CSSOM TREE，两个tree结合，形成render tree（不包含HTML的具体元素和元素要画的具体位置），通过Layout可以计算出每个元素具体的宽高颜色位置，结合起来，开始绘制，最后显示在屏幕中新页面显示出来\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("ol",[a("li",[t._v("浏览器进程通过 IPC 把 URL 请求发送至网络进程；")]),t._v(" "),a("li",[t._v("查找资源缓存（有效期内）；")]),t._v(" "),a("li",[t._v("DNS 解析（查询 DNS 缓存）；")]),t._v(" "),a("li",[t._v("进入 TCP 队列（单个域名 TCP 连接数量限制）；")]),t._v(" "),a("li",[t._v("创建 TCP 连接（三次握手）；")]),t._v(" "),a("li",[t._v("HTTPS 建立 TLS 连接（client hello, server hello, pre-master key 生成『对话密钥』）；")]),t._v(" "),a("li",[t._v("发送 HTTP 请求（请求行[方法、URL、协议]、请求头 Cookie 等、请求体 POST）；")]),t._v(" "),a("li",[t._v("接受请求（响应行[协议、状态码、状态消息]、响应头、响应体等）；\n"),a("ul",[a("li",[t._v("状态码 301 / 302，根据响应头中的 Location 重定向；")]),t._v(" "),a("li",[t._v("状态码 200，根据响应头中的 Content-Type 决定如何响应（下载文件、加载资源、渲染 HTML）。")])])])]),t._v(" "),a("h3",{attrs:{id:"html-css-js如何渲染成页面的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-css-js如何渲染成页面的"}},[t._v("#")]),t._v(" html+css+js如何渲染成页面的")]),t._v(" "),a("p",[t._v("渲染流水线")]),t._v(" "),a("p",[t._v("构建 DOM 树")]),t._v(" "),a("ol",[a("li",[t._v("输入：HTML 文档；")]),t._v(" "),a("li",[t._v("处理：HTML 解析器解析；")]),t._v(" "),a("li",[t._v("输出：DOM 数据解构。")])]),t._v(" "),a("p",[t._v("样式计算")]),t._v(" "),a("ol",[a("li",[t._v("输入：CSS 文本；")]),t._v(" "),a("li",[t._v("处理：属性值标准化，每个节点具体样式（继承、层叠）；")]),t._v(" "),a("li",[t._v("输出：styleSheets(CSSOM)。")])]),t._v(" "),a("p",[t._v("布局(DOM 树中元素的计划位置)")]),t._v(" "),a("ol",[a("li",[t._v("DOM & CSSOM 合并成渲染树；")]),t._v(" "),a("li",[t._v("布局树（DOM 树中的可见元素）；")]),t._v(" "),a("li",[t._v("布局计算。")])]),t._v(" "),a("p",[t._v("分层")]),t._v(" "),a("ol",[a("li",[t._v("特定节点生成专用图层，生成一棵图层树（层叠上下文、Clip，类似 PhotoShop 里的图层）；")]),t._v(" "),a("li",[t._v("拥有层叠上下文属性（明确定位属性、透明属性、CSS 滤镜、z-index 等）的元素会创建单独图层；")]),t._v(" "),a("li",[t._v("没有图层的 DOM 节点属于父节点图层；")]),t._v(" "),a("li",[t._v("需要剪裁的地方也会创建图层。")])]),t._v(" "),a("p",[t._v("绘制指令")]),t._v(" "),a("ol",[a("li",[t._v("输入：图层树；")]),t._v(" "),a("li",[t._v("渲染引擎对图层树中每个图层进行绘制；")]),t._v(" "),a("li",[t._v("拆分成绘制指令，生成绘制列表，提交到合成线程；")]),t._v(" "),a("li",[t._v("输出：绘制列表。")])]),t._v(" "),a("p",[t._v("分块")]),t._v(" "),a("ol",[a("li",[t._v("合成线程会将较大、较长的图层（一屏显示不完，大部分不在视口内）划分为图块（tile, 256"),a("em",[t._v("256, 512")]),t._v("512）。")])]),t._v(" "),a("p",[t._v("光栅化（栅格化）")]),t._v(" "),a("ol",[a("li",[t._v("在光栅化线程池中，将视口附近的图块优先生成位图（栅格化执行该操作）；")]),t._v(" "),a("li",[t._v("快速栅格化：GPU 加速，生成位图（GPU 进程）。")])]),t._v(" "),a("p",[t._v("合成绘制")]),t._v(" "),a("ol",[a("li",[t._v("绘制图块命令——DrawQuad，提交给浏览器进程；")]),t._v(" "),a("li",[t._v("浏览器进程的 viz 组件，根据DrawQuad命令，绘制在屏幕上。")])]),t._v(" "),a("h3",{attrs:{id:"如果下载-css-文件阻塞了，会阻塞-dom-树的合成吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果下载-css-文件阻塞了，会阻塞-dom-树的合成吗"}},[t._v("#")]),t._v(" 如果下载 CSS 文件阻塞了，会阻塞 DOM 树的合成吗")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("// 当从服务器接收HTML页面的第一批数据时，DOM解析器就开始工作了，在解析过程中，如果遇到了JS脚本，如下所示：\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        极客时间\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n        document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n// 那么DOM解析器会先执行JavaScript脚本，执行完成之后，再继续往下解析。\n\n// 那么第二种情况复杂点了，我们内联的脚本替换成js外部文件，如下所示：\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        极客时间\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("foo.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n// 这种情况下，当解析到JavaScript的时候，会先暂停DOM解析，并下载foo.js文件，下载完成之后执行该段JS文件，然后再继续往下解析DOM。这就是JavaScript文件为什么会阻塞DOM渲染。\n\n// 我们再看第三种情况，还是看下面代码：\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("theme.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("极客时间"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),t._v("\n        ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n// 当我在JavaScript中访问了某个元素的样式，那么这时候就需要等待这个样式被下载完成才能继续往下执行，所以在这种情况下，CSS也会阻塞DOM的解析。\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 所以JS和CSS都有可能会阻塞DOM解析 --\x3e")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br")])]),a("h2",{attrs:{id:"浏览器种的javascript执行机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器种的javascript执行机制"}},[t._v("#")]),t._v(" 浏览器种的JavaScript执行机制")]),t._v(" "),a("h3",{attrs:{id:"javascript代码是按顺序执行的吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript代码是按顺序执行的吗"}},[t._v("#")]),t._v(" JavaScript代码是按顺序执行的吗")]),t._v(" "),a("p",[t._v("事实并未如此，在javascript执行上下文中存在 "),a("strong",[t._v("变量提升（Hoisting）")]),t._v("  。")]),t._v(" "),a("p",[t._v("从概念的字面意义上来看，“变量提升”意味着变量和函数的声明会在物理层面移动到代码的最前面，正如我们所模拟的那样。但，这并不准确。"),a("strong",[t._v("实际上变量和函数声明在代码里的位置是不会改变的，而且是在编译阶段被 JavaScript 引擎放入内存中")]),t._v("。对，你没听错，一段 JavaScript 代码在执行之前需要被 JavaScript 引擎编译，编译完成之后，才会进入执行阶段。")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript 代码执行过程中，需要先做变量提升，而之所以需要实现变量提升，是因为 JavaScript 代码在执行之前需要先编译。")]),t._v(" "),a("li",[t._v("在编译阶段，变量和函数会被存放到变量环境中，变量的默认值会被设置为 undefined；在代码执行阶段，JavaScript 引擎会从变量环境中去查找自定义的变量和函数。")]),t._v(" "),a("li",[t._v("如果在编译阶段，存在两个相同的函数，那么最终存放在变量环境中的是最后定义的那个，这是因为后定义的会覆盖掉之前定义的。")])]),t._v(" "),a("h3",{attrs:{id:"何为变量提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何为变量提升"}},[t._v("#")]),t._v(" 何为变量提升")]),t._v(" "),a("p",[t._v("所谓的变量提升，是指在 JavaScript 代码执行过程中，JavaScript 引擎把变量的声明部分和函数的声明部分提升到代码开头的“行为”。变量被提升后，会给变量设置默认值，这个默认值就是我们熟悉的 undefined。")]),t._v(" "),a("h3",{attrs:{id:"在执行之前就进行编译并创建执行上下文。一般说来，有这么三种情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在执行之前就进行编译并创建执行上下文。一般说来，有这么三种情况"}},[t._v("#")]),t._v(" 在执行之前就进行编译并创建执行上下文。一般说来，有这么三种情况")]),t._v(" "),a("ul",[a("li",[t._v("当 JavaScript 执行全局代码的时候，会编译全局代码并创建全局执行上下文，而且在整个页面的生存周期内，全局执行上下文只有一份。")]),t._v(" "),a("li",[t._v("当调用一个函数的时候，函数体内的代码会被编译，并创建函数执行上下文，一般情况下，函数执行结束之后，创建的函数执行上下文会被销毁。")]),t._v(" "),a("li",[t._v("当使用 eval 函数的时候，eval 的代码也会被编译，并创建执行上下文。")])]),t._v(" "),a("h3",{attrs:{id:"什么是栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是栈"}},[t._v("#")]),t._v(" 什么是栈")]),t._v(" "),a("p",[t._v("关于栈，你可以结合这么一个贴切的例子来理解，一条单车道的单行线，一端被堵住了，而另一端入口处没有任何提示信息，堵住之后就只能后进去的车子先出来，这时这个堵住的单行线就可以被看作是一个栈容器，车子开进单行线的操作叫做入栈，车子倒出去的操作叫做出栈。")]),t._v(" "),a("h3",{attrs:{id:"什么是-javascript-的调用栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-javascript-的调用栈"}},[t._v("#")]),t._v(" 什么是 JavaScript 的调用栈")]),t._v(" "),a("p",[t._v("JavaScript 引擎正是利用栈的这种结构来管理执行上下文的。在执行上下文创建好后，JavaScript 引擎会将执行上下文压入栈中，通常把这种用来管理执行上下文的栈称为执行上下文栈，又称调用栈。")]),t._v(" "),a("ul",[a("li",[t._v("每调用一个函数，JavaScript 引擎会为其创建执行上下文，并把该执行上下文压入调用栈，然后 JavaScript 引擎开始执行函数代码。")]),t._v(" "),a("li",[t._v("如果在一个函数 A 中调用了另外一个函数 B，那么 JavaScript 引擎会为 B 函数创建执行上下文，并将 B 函数的执行上下文压入栈顶。")]),t._v(" "),a("li",[t._v("当前函数执行完毕后，JavaScript 引擎会将该函数的执行上下文弹出栈。当分配的调用栈空间被占满时，会引发“堆栈溢出”问题。")])]),t._v(" "),a("h3",{attrs:{id:"栈溢出（stack-overflow）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈溢出（stack-overflow）"}},[t._v("#")]),t._v(" 栈溢出（Stack Overflow）")]),t._v(" "),a("p",[t._v("现在你知道了调用栈是一种用来管理执行上下文的数据结构，符合后进先出的规则。不过还有一点你要注意，调用栈是有大小的，当入栈的执行上下文超过一定数目，JavaScript 引擎就会报错，我们把这种错误叫做栈溢出。")]),t._v(" "),a("h3",{attrs:{id:"var缺陷以及为什么要引入let和const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var缺陷以及为什么要引入let和const"}},[t._v("#")]),t._v(" var缺陷以及为什么要引入let和const")]),t._v(" "),a("p",[t._v("正是由于 JavaScript 存在变量提升这种特性，从而导致了很多与直觉不符的代码，这也是 JavaScript 的一个重要设计缺陷")]),t._v(" "),a("h3",{attrs:{id:"变量提升所带来的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量提升所带来的问题"}},[t._v("#")]),t._v(" 变量提升所带来的问题")]),t._v(" "),a("ol",[a("li",[t._v("变量容易在不被察觉的情况下被覆盖掉")]),t._v(" "),a("li",[t._v("本应销毁的变量没有被销毁")])]),t._v(" "),a("p",[t._v("由于 JavaScript 的变量提升存在着变量覆盖、变量污染等设计缺陷，所以 ES6 引入了块级作用域关键字来解决这些问题。")]),t._v(" "),a("h3",{attrs:{id:"作用域（scope）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域（scope）"}},[t._v("#")]),t._v(" 作用域（scope）")]),t._v(" "),a("p",[a("strong",[t._v("作用域是指在程序中定义变量的区域，该位置决定了变量的生命周期。通俗地理解，作用域就是变量与函数的可访问范围，即作用域控制着变量和函数的可见性和生命周期。")])]),t._v(" "),a("h3",{attrs:{id:"块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),a("p",[t._v("在 ES6 之前，ES 的作用域只有两种：全局作用域和函数作用域。")]),t._v(" "),a("p",[t._v("全局作用域中的对象在代码中的任何地方都能访问，其生命周期伴随着页面的生命周期。\n函数作用域就是在函数内部定义的变量或者函数，并且定义的变量或者函数只能在函数内部被访问。函数执行结束之后，函数内部定义的变量会被销毁。")]),t._v(" "),a("p",[t._v("在 ES6 之前，JavaScript 只支持这两种作用域，相较而言，其他语言则都普遍支持块级作用域。块级作用域就是使用一对大括号包裹的一段代码，比如函数、判断语句、循环语句，甚至单独的一个{}都可以被看作是一个块级作用域。")]),t._v(" "),a("h3",{attrs:{id:"javascript-引擎是如何同时支持变量提升和块级作用域的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-引擎是如何同时支持变量提升和块级作用域的"}},[t._v("#")]),t._v(" JavaScript 引擎是如何同时支持变量提升和块级作用域的")]),t._v(" "),a("p",[t._v("函数内部通过 var 声明的变量，在编译阶段全都被存放到变量环境里面了。")]),t._v(" "),a("p",[t._v("通过 let 声明的变量，在编译阶段会被存放到词法环境（Lexical Environment）中。")]),t._v(" "),a("p",[t._v("在函数内部的作用域块，通过 let 声明的变量并没有被存放到词法环境中。")]),t._v(" "),a("h3",{attrs:{id:"词法作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[t._v("#")]),t._v(" 词法作用域")]),t._v(" "),a("p",[t._v("词法作用域就是指作用域是由代码中函数声明的位置来决定的，所以词法作用域是静态的作用域，通过它就能够预测代码在执行过程中如何查找标识符。")]),t._v(" "),a("h3",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),a("p",[t._v("在 JavaScript 中，根据词法作用域的规则，内部函数总是可以访问其外部函数中声明的变量，当通过调用一个外部函数返回一个内部函数后，即使该外部函数已经执行结束了，但是内部函数引用外部函数的变量依然保存在内存中，我们就把这些变量的集合称为闭包。")]),t._v(" "),a("h3",{attrs:{id:"闭包是怎么回收的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包是怎么回收的"}},[t._v("#")]),t._v(" 闭包是怎么回收的")]),t._v(" "),a("p",[t._v("如果引用闭包的函数是个局部变量，等函数销毁后，在下次 JavaScript 引擎执行垃圾回收时，判断闭包这块内容如果已经不再被使用了，那么 JavaScript 引擎的垃圾回收器就会回收这块内存。所以在使用闭包的时候，你要尽量注意一个原则：如果该闭包会一直使用，那么它可以作为全局变量而存在；但如果使用频率不高，而且占用内存又比较大的话，那就尽量让它成为一个局部变量。")]),t._v(" "),a("h3",{attrs:{id:"javascript-中的-this-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中的-this-是什么"}},[t._v("#")]),t._v(" JavaScript 中的 this 是什么")]),t._v(" "),a("p",[t._v("关于 this，我们还是得先从执行上下文说起。在前面几篇文章中，我们提到执行上下文中包含了变量环境、词法环境、外部环境，但其实还有一个 this 没有提及")]),t._v(" "),a("p",[t._v("this 是和执行上下文绑定的，也就是说每个执行上下文中都有一个 this")]),t._v(" "),a("h3",{attrs:{id:"有下面三种方式来设置函数执行上下文中的-this-值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有下面三种方式来设置函数执行上下文中的-this-值"}},[t._v("#")]),t._v(" 有下面三种方式来设置函数执行上下文中的 this 值")]),t._v(" "),a("ol",[a("li",[t._v("通过函数的 call 方法设置")]),t._v(" "),a("li",[t._v("通过对象调用方法设置")]),t._v(" "),a("li",[t._v("通过构造函数中设置")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"极客时间"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreateObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("其实，当执行 new CreateObj() 的时候，JavaScript 引擎做了如下四件事：")]),t._v(" "),a("p",[t._v("首先创建了一个空对象 tempObj；\n接着调用 CreateObj.call 方法，并将 tempObj 作为 call 方法的参数，这样当 CreateObj 的执行上下文创建时，它的 this 就指向了 tempObj 对象；\n然后执行 CreateObj 函数，此时的 CreateObj 函数执行上下文中的 this 指向了 tempObj 对象；\n最后返回 tempObj 对象。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tempObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateObj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tempObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tempObj \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"this-的设计缺陷以及应对方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-的设计缺陷以及应对方案"}},[t._v("#")]),t._v(" this 的设计缺陷以及应对方案")]),t._v(" "),a("ol",[a("li",[t._v("嵌套函数中的 this 不会从外层函数中继承")])]),t._v(" "),a("ul",[a("li",[t._v("把 this 保存为一个 self 变量，再利用变量的作用域机制传递给嵌套函数。")]),t._v(" "),a("li",[t._v("继续使用 this，但是要把嵌套函数改为箭头函数，因为箭头函数没有自己的执行上下文，所以它会继承调用函数中的 this。")])]),t._v(" "),a("ol",[a("li",[t._v("普通函数中的 this 默认指向全局对象 window")])]),t._v(" "),a("p",[t._v("这个问题可以通过设置 JavaScript 的“严格模式”来解决。在严格模式下，默认执行一个函数，其函数的执行上下文中的 this 值是 undefined，这就解决上面的问题了。")]),t._v(" "),a("h3",{attrs:{id:"javascript-的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的数据类型"}},[t._v("#")]),t._v(" JavaScript 的数据类型")]),t._v(" "),a("p",[t._v("JavaScript 是一种弱类型的、动态的语言。那这些特点意味着什么呢？")]),t._v(" "),a("ul",[a("li",[t._v("弱类型，意味着你不需要告诉 JavaScript 引擎这个或那个变量是什么数据类型，JavaScript 引擎在运行代码的时候自己会计算出来。")]),t._v(" "),a("li",[t._v("动态，意味着你可以使用同一个变量保存不同类型的数据。")])]),t._v(" "),a("h3",{attrs:{id:"在-javascript-的执行过程中，-主要有三种类型内存空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-javascript-的执行过程中，-主要有三种类型内存空间"}},[t._v("#")]),t._v(" 在 JavaScript 的执行过程中， 主要有三种类型内存空间")]),t._v(" "),a("p",[t._v("分别是代码空间、栈空间和堆空间。")]),t._v(" "),a("p",[t._v("对象类型是存放在堆空间的，在栈空间中只是保留了对象的引用地址，当 JavaScript 需要访问该数据的时候，是通过栈中的引用地址来访问的，相当于多了一道转手流程。")]),t._v(" "),a("p",[a("strong",[t._v("原始类型的数据值都是直接保存在“栈”中的，引用类型的值是存放在“堆”中的。")])]),t._v(" "),a("h3",{attrs:{id:"为什么一定要分-堆-和-栈-两个存储空间呢？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么一定要分-堆-和-栈-两个存储空间呢？"}},[t._v("#")]),t._v(" 为什么一定要分“堆”和“栈”两个存储空间呢？")]),t._v(" "),a("p",[t._v("这是因为 JavaScript 引擎需要用栈来维护程序执行期间上下文的状态，如果栈空间大了话，所有的数据都存放在栈空间里面，那么会影响到上下文切换的效率，进而又影响到整个程序的执行效率。")]),t._v(" "),a("p",[t._v("栈主要管运行，堆主要管存储")]),t._v(" "),a("p",[t._v("通常情况下，栈空间都不会设置太大，主要用来存放一些原始类型的小数据。而引用类型的数据占用的空间都比较大，所以这一类数据会被存放到堆中，堆空间很大，能存放很多大的数据，不过缺点是分配内存和回收内存都会占用一定的时间。")]),t._v(" "),a("h3",{attrs:{id:"不同语言的垃圾回收策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同语言的垃圾回收策略"}},[t._v("#")]),t._v(" 不同语言的垃圾回收策略")]),t._v(" "),a("p",[t._v("通常情况下，垃圾数据回收分为手动回收和自动回收两种策略。")]),t._v(" "),a("p",[t._v("如 C/C++ 就是使用手动回收策略，何时分配内存、何时销毁内存都是由代码控制的 ; 另外一种使用的是自动垃圾回收的策略，如 JavaScript、Java、Python 等语言，产生的垃圾数据是由垃圾回收器来释放的，并不需要手动通过代码来释放。")]),t._v(" "),a("h3",{attrs:{id:"调用栈中的数据是如何回收的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用栈中的数据是如何回收的"}},[t._v("#")]),t._v(" 调用栈中的数据是如何回收的")]),t._v(" "),a("p",[t._v("当一个函数执行结束之后，JavaScript 引擎会通过向下移动 ESP 来销毁该函数保存在栈中的执行上下文。")]),t._v(" "),a("h3",{attrs:{id:"堆中的数据是如何回收的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆中的数据是如何回收的"}},[t._v("#")]),t._v(" 堆中的数据是如何回收的")]),t._v(" "),a("p",[t._v("要回收堆中的垃圾数据，就需要用到 JavaScript 中的垃圾回收器了。")]),t._v(" "),a("p",[t._v("在 V8 中会把堆分为新生代和老生代两个区域，新生代中存放的是生存时间短的对象，老生代中存放的生存时间久的对象。")]),t._v(" "),a("p",[t._v("新生区通常只支持 1～8M 的容量，而老生区支持的容量就大很多了。对于这两块区域，V8 分别使用两个不同的垃圾回收器，以便更高效地实施垃圾回收。")]),t._v(" "),a("ul",[a("li",[t._v("副垃圾回收器，主要负责新生代的垃圾回收。")]),t._v(" "),a("li",[t._v("主垃圾回收器，主要负责老生代的垃圾回收。")])]),t._v(" "),a("p",[t._v("第一步是标记空间中活动对象和非活动对象。所谓活动对象就是还在使用的对象，非活动对象就是可以进行垃圾回收的对象。")]),t._v(" "),a("p",[t._v("第二步是回收非活动对象所占据的内存。其实就是在所有的标记完成之后，统一清理内存中所有被标记为可回收的对象。")]),t._v(" "),a("p",[t._v("第三步是做内存整理。一般来说，频繁回收对象后，内存中就会存在大量不连续空间，我们把这些不连续的内存空间称为内存碎片。当内存中出现了大量的内存碎片之后，如果需要分配较大连续内存的时候，就有可能出现内存不足的情况。所以最后一步需要整理这些内存碎片，但这步其实是可选的，因为有的垃圾回收器不会产生内存碎片，比如接下来我们要介绍的副垃圾回收器。")]),t._v(" "),a("h3",{attrs:{id:"副垃圾回收器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#副垃圾回收器"}},[t._v("#")]),t._v(" 副垃圾回收器")]),t._v(" "),a("p",[t._v("生代中用 Scavenge 算法来处理。所谓 Scavenge 算法，是把新生代空间对半划分为两个区域，一半是对象区域，一半是空闲区域")]),t._v(" "),a("p",[t._v("在垃圾回收过程中，首先要对对象区域中的垃圾做标记；标记完成之后，就进入垃圾清理阶段，副垃圾回收器会把这些存活的对象复制到空闲区域中，同时它还会把这些对象有序地排列起来，所以这个复制过程，也就相当于完成了内存整理操作，复制后空闲区域就没有内存碎片了。完成复制后，对象区域与空闲区域进行角色翻转，也就是原来的对象区域变成空闲区域，原来的空闲区域变成了对象区域。这样就完成了垃圾对象的回收操作，同时这种角色翻转的操作还能让新生代中的这两块区域无限重复使用下去。")]),t._v(" "),a("h3",{attrs:{id:"主垃圾回收器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主垃圾回收器"}},[t._v("#")]),t._v(" 主垃圾回收器")]),t._v(" "),a("p",[t._v("主垃圾回收器是采用标记 - 清除（Mark-Sweep）的算法进行垃圾回收的")]),t._v(" "),a("p",[t._v("标记 - 整理（Mark-Compact），这个标记过程仍然与标记 - 清除算法里的是一样的，但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。")]),t._v(" "),a("h3",{attrs:{id:"v8是如何执行一段javascript代码的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8是如何执行一段javascript代码的？"}},[t._v("#")]),t._v(" V8是如何执行一段JavaScript代码的？")]),t._v(" "),a("p",[t._v("要深入理解 V8 的工作原理，你需要搞清楚一些概念和原理，比如接下来我们要详细讲解的编译器（Compiler）、解释器（Interpreter）、抽象语法树（AST）、字节码（Bytecode）、即时编译器（JIT）等概念")]),t._v(" "),a("p",[t._v("V8 执行一段代码流程图")]),t._v(" "),a("p",[t._v("![V8 执行一段代码流程图](imgs\\V8 执行一段代码流程图.png)")]),t._v(" "),a("ol",[a("li",[t._v("生成抽象语法树（AST）和执行上下文")]),t._v(" "),a("li",[t._v("生成字节码（字节码就是介于 AST 和机器码之间的一种代码。但是与特定类型的机器码无关，字节码需要通过解释器将其转换为机器码后才能执行。）")]),t._v(" "),a("li",[t._v("执行代码")])]),t._v(" "),a("h3",{attrs:{id:"编译器和解释器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译器和解释器"}},[t._v("#")]),t._v(" 编译器和解释器")]),t._v(" "),a("p",[t._v("之所以存在编译器和解释器，是因为机器不能直接理解我们所写的代码，所以在执行程序之前，需要将我们所写的代码“翻译”成机器能读懂的机器语言。按语言的执行流程，可以把语言划分为编译型语言和解释型语言。")]),t._v(" "),a("p",[a("strong",[t._v("编译型语言在程序执行之前，需要经过编译器的编译过程，并且编译之后会直接保留机器能读懂的二进制文件，这样每次运行程序时，都可以直接运行该二进制文件，而不需要再次重新编译了。比如 C/C++、GO 等都是编译型语言。")])]),t._v(" "),a("p",[a("strong",[t._v("而由解释型语言编写的程序，在每次运行时都需要通过解释器对程序进行动态解释和执行。比如 Python、JavaScript 等都属于解释型语言。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"imgs%5C4e196603ecb78188e99e963e251b9781.png",alt:"4e196603ecb78188e99e963e251b9781"}})]),t._v(" "),a("h3",{attrs:{id:"字节码-jit-技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节码-jit-技术"}},[t._v("#")]),t._v(" 字节码 +JIT”技术")]),t._v(" "),a("p",[t._v("如果发现有热点代码（HotSpot），比如一段代码被重复执行多次，这种就称为热点代码，那么后台的编译器 TurboFan 就会把该段热点的字节码编译为高效的机器码，然后当再次执行这段被优化的代码时，只需要执行编译后的机器码就可以了，这样就大大提升了代码的执行效率。\n"),a("img",{attrs:{src:"imgs%5C%E5%8D%B3%E6%97%B6%E7%BC%96JIT%E6%8A%80%E6%9C%AF.png",alt:"即时编JIT技术"}})]),t._v(" "),a("h3",{attrs:{id:"javascript-的性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的性能优化"}},[t._v("#")]),t._v(" JavaScript 的性能优化")]),t._v(" "),a("p",[t._v("虽然在 V8 诞生之初，也出现过一系列针对 V8 而专门优化 JavaScript 性能的方案，比如隐藏类、内联缓存等概念都是那时候提出来的。不过随着 V8 的架构调整，你越来越不需要这些微优化策略了，相反，对于优化 JavaScript 执行效率，你应该将优化的中心聚焦在单次脚本的执行时间和脚本的网络下载上，主要关注以下三点内容：")]),t._v(" "),a("p",[t._v("1、提升单次脚本的执行速度，避免 JavaScript 的长任务霸占主线程，这样可以使得页面快速响应交互；\n2、避免大的内联脚本，因为在解析 HTML 的过程中，解析和编译也会占用主线程；\n3、减少 JavaScript 文件的容量，因为更小的文件会提升下载速度，并且占用更低的内存。")]),t._v(" "),a("h2",{attrs:{id:"浏览器中的页面循环系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的页面循环系统"}},[t._v("#")]),t._v(" 浏览器中的页面循环系统")]),t._v(" "),a("h3",{attrs:{id:"页面是怎么-活-起来的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面是怎么-活-起来的"}},[t._v("#")]),t._v(" 页面是怎么“活”起来的")]),t._v(" "),a("p",[t._v("浏览器页面是由消息队列和事件循环系统来驱动的。")]),t._v(" "),a("ul",[a("li",[t._v("如果有一些确定好的任务，可以使用一个单线程来按照顺序处理这些任务，这是第一版线程模型。")]),t._v(" "),a("li",[t._v("要在线程执行过程中接收并处理新的任务，就需要引入循环语句和事件系统，这是第二版线程模型。")]),t._v(" "),a("li",[t._v("如果要接收其他线程发送过来的任务，就需要引入消息队列，这是第三版线程模型。")]),t._v(" "),a("li",[t._v("如果其他进程想要发送任务给页面主线程，那么先通过 IPC 把任务发送给渲染进程的 IO 线程，IO 线程再把任务发送给页面主线程。")]),t._v(" "),a("li",[t._v("消息队列机制并不是太灵活，为了适应效率和实时性，引入了微任务。")])]),t._v(" "),a("h3",{attrs:{id:"浏览器怎么实现-settimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器怎么实现-settimeout"}},[t._v("#")]),t._v(" 浏览器怎么实现 setTimeout")]),t._v(" "),a("p",[t._v("要执行一段异步任务，需要先将任务添加到消息队列中。不过通过定时器设置回调函数有点特别，它们需要在指定的时间间隔内被调用，但消息队列中的任务是按照顺序执行的，所以为了保证回调函数能在指定时间内执行，你不能将定时器的回调函数直接添加到消息队列中。")]),t._v(" "),a("p",[t._v("在 Chrome 中除了正常使用的消息队列之外，还有另外一个消息队列，这个队列中维护了需要延迟执行的任务列表，包括了定时器和 Chromium 内部一些需要延迟执行的任务。所以当通过 JavaScript 创建一个定时器时，渲染进程会将该定时器的回调任务添加到延迟队列中。")]),t._v(" "),a("p",[t._v("chrome 会维护两个队列，一个是消息队列，一个是延迟队列，定时器的回调任务就是放在延迟队列中")]),t._v(" "),a("h3",{attrs:{id:"使用-settimeout-的一些注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-settimeout-的一些注意事项"}},[t._v("#")]),t._v(" 使用 setTimeout 的一些注意事项")]),t._v(" "),a("ol",[a("li",[t._v("如果当前任务执行时间过久，会影响定时器任务的执行")]),t._v(" "),a("li",[t._v("如果 setTimeout 存在嵌套调用，那么系统会设置最短时间间隔为 4 毫秒")]),t._v(" "),a("li",[t._v("未激活的页面，setTimeout 执行最小间隔是 1000 毫秒")]),t._v(" "),a("li",[t._v("延时执行时间有最大值（32bit 最大只能存放的数字是 2147483647 毫秒）")]),t._v(" "),a("li",[t._v("使用 setTimeout 设置的回调函数中的 this 不符合直觉")])]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-运作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-运作机制"}},[t._v("#")]),t._v(" XMLHttpRequest 运作机制")]),t._v(" "),a("p",[t._v("XMLHttpRequest 工作流程图\n![XMLHttpRequest 工作流程图](imgs\\XMLHttpRequest 工作流程图.png)")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetWebData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 1:新建XMLHttpRequest请求对象\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 2:注册相关事件回调处理函数 \n     */")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//请求未初始化")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请求未初始化"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OPENED")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OPENED"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEADERS_RECEIVED")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HEADERS_RECEIVED"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOADING")]),t._v("  \n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LOADING"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DONE")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DONE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ontimeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ontimeout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'onerror'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 3:打开请求\n     */")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个Get请求,采用异步")]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 4:配置参数\n     */")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置xhr请求的超时时间")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置响应返回的数据格式")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X_TEST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time.geekbang"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 5:发送请求\n     */")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br")])]),a("h3",{attrs:{id:"xmlhttprequest-使用过程中的-坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-使用过程中的-坑"}},[t._v("#")]),t._v(" XMLHttpRequest 使用过程中的“坑”")]),t._v(" "),a("ol",[a("li",[t._v("跨域问题")]),t._v(" "),a("li",[t._v("HTTPS 混合内容的问题(HTTPS 混合内容是 HTTPS 页面中包含了不符合 HTTPS 安全要求的内容，比如包含了 HTTP 资源)")])])])}),[],!1,null,null,null);s.default=r.exports}}]);